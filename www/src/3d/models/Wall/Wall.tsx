/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei/useGLTF'

import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import {Group, Mesh, MeshStandardMaterial} from "three";

type GLTFResult = GLTF & {
  nodes: {
    Cube4530: Mesh
    ['Cube.4530_1']: Mesh
  }
  materials: {
    Stone: MeshStandardMaterial
    StoneDark: MeshStandardMaterial
  }
}

export default function Wall(props: JSX.IntrinsicElements['group']) {
  const group = useRef<Group>()
  const { nodes, materials } = useGLTF('/wall.gltf.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group userData={{ name: 'wall' }}>
        <mesh material={materials.Stone} geometry={nodes.Cube4530.geometry} receiveShadow />
        <mesh material={materials.StoneDark} geometry={nodes['Cube.4530_1'].geometry} receiveShadow />
      </group>
    </group>
  )
}

useGLTF.preload('/wall.gltf.glb')
